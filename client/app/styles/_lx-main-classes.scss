
body{
  margin-bottom: $sticky-footer-height;
}

.cl-sticky-footer {

  // hide the footer on short displays
  @media (max-height: $hide-sticky-footer-max-height) {
    display: none;
  }

  position: fixed;
  bottom: 0;
  width: 100%;
  height: $sticky-footer-height;
  z-index: $zindex-navbar-fixed;
}

.cl-body-notification-pending {
  background: $brand-danger-lighter;
}

.cl-panel-header-btn {
  padding-top: 2px;
  padding-bottom: 2px;
}

span.cl-overlay-text-span {
  background: rgba(0, 0, 0, 0.15);
  color:rgba(255, 255, 255, 0.9);
  padding: 2px 4px;
  border-radius: 4px;
}

.cl-landing-page-well {
  height: nth($common-display-area-height-list, 1);
  @for $idx from 1 through length($viewport-heights-list) {
    @media (min-height: nth($viewport-heights-list, $idx)) {
      height: nth($common-display-area-height-list, $idx);
    }
  }
}

.cl-main-control-menu {
  position: absolute;
  height: nth($common-display-area-height-list, 1);
  @for $idx from 1 through length($viewport-heights-list) {
    @media (min-height: nth($viewport-heights-list, $idx)) {
      height: nth($common-display-area-height-list, $idx);
    }
  }
  width: 100%;
  padding: 0;
  margin: 0; // override default ul
  min-width: 0px;
  background: $main-control-background;
  border: 1px solid $main-control-border-color;
  box-sizing: border-box;

  & .btn-default, & .btn-default.dropdown-toggle, & li, & li>a {
    background: $main-control-background;
    color: $main-control-color;
    text-align: left;


    &:hover, &:active, &:focus {
      background: $main-control-hover-background;
      color: $main-control-hover-color;
    }
  }

  & ul {
    background: $main-control-background;
    color: $main-control-color;
  }
}

.cl-animate-main-control-menu {
  left: 0;
  z-index: $zindex-dropdown + 10;

  &.ng-enter {
    animation: slideInLeft $slide-main-menu-duration;
  }
  &.ng-leave {
    animation: slideOutLeft $slide-main-menu-duration;
  }
}

.cl-main-notification-menu {
  position: absolute;
  padding-left: 0px;
}

.cl-animate-main-notification-menu {
  z-index: $zindex-dropdown + 10;

  &.ng-enter {
    animation: slideInRight $slide-main-menu-duration;
  }
  &.ng-leave {
    animation: slideOutRight $slide-main-menu-duration;
  }
}

.cl-transition-margin_and_color {
    -webkit-transition: margin color;
    -moz-transition: margin color;
    -ms-transition: margin color;
    -o-transition: margin color;
    transition: margin color;
    transition-duration: $slide-main-menu-duration;
}

.cl-transition-opacity {
  &.ng-enter,
  &.ng-leave.ng-leave-active {
    opacity: 0;
  }
  &.ng-leave,
  &.ng-enter.ng-enter-active {
    opacity: 1;
  }

  &.ng-enter, &.ng-leave {
    -webkit-transition: opacity;
    -moz-transition: opacity;
    -ms-transition: opacity;
    -o-transition: opacity;
    transition: opacity;
    transition-duration: $slide-main-menu-duration;
  }
}

.cl-transition-margins-and-width {
  -webkit-transition: margin width;
  -moz-transition: margin width;
  -ms-transition: margin width;
  -o-transition: margin width;
  transition: margin width;
  transition-duration: $slide-main-menu-duration;
}

.cl-transition-background-color {
  -webkit-transition: background-color;
  -moz-transition: background-color;
  -ms-transition: background-color;
  -o-transition: background-color;
  transition: background-color;
  transition-duration: 0.3s;
}
// cl-sliding-div is used for the divs that are animated in and out of the cl-sliding-display-area-wrapper div
.cl-main-ng-view-area-absolute-div {
  position: absolute;
  top: 0;
}

.cl-title-row-height {
  height: $title-row-height;
}

.cl-title-row-top-bottom-margin {
  margin-top: 4px;
  margin-bottom: 4px;
}

.cl-no-left-or-right-padding {
    padding-left: 0px;
    padding-right: 0px;
}

/* no-xs-padding/no-xs-margins are used to remove the padding/margin from xs devices. This
   allows us to fully use the screen space for content as opposed to whitespace */
.cl-container-padding-and-margins {
    padding-left: 0px;
    padding-right: 0px;
    @media(max-width: $screen-xs-max) {
      margin-left: $xs-container-margin;
      margin-right: $xs-container-margin;
    }
}

.cl-vertical-align-inline-block {
    display: inline-block;
    vertical-align: middle;
    float: none;
}

/* Note: at first glance, it may appear that cl-row-no-margins and cl-col-no-padding serve no purpose,
   however, if they are not used, then the right side of the page will be extended by 15px with blank space
   to accommodate the standard bootstrap formatting that uses negative margin on rows to offset the padding
   that is added in the columns. Removing these classes will cause a bottom scrollbar to appear even though
   there is nothing shown to the right of the contents. */
.cl-row-no-margins {
    margin-left: 0px;
    margin-right: 0px;
}

.cl-col-no-padding {
    padding-left: 0px;
    padding-right: 0px;
}

.cl-col-remove-right-padding {
  padding-right: 0px;
}

.col-remove-left-padding {
  padding-left: 0px;
}

.cl-my-well {
  background-color: #000; // previously #f5f5f5;
  display:inline-block;
  vertical-align: top;

}

.cl-mini-well {
  background-color: #000; // #f5f5f5;
  border: 2px solid #e3e3d3;
}



.cl-room-name-input {
  max-width: $screen-xs-max;
}

.cl-xs-max-width {
  max-width: $screen-xs-max;
}

.cl-sm-max-width {
  max-width: $screen-sm-max;
}

.cl-md-max-width {
  max-width: $screen-md-max;
}


@mixin my-mixin-border-glow($color, $opacity, $shadow-size-multiplier:1) {
  border-color: rgba($color, $opacity);
  outline: 0;

  $faded-opacity : $opacity * 0.5 ;
  $color-rgba : rgba($color,  $faded-opacity );
  @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px*$shadow-size-multiplier $color-rgba);
}

.cl-invalid-input-glow {
  @include my-mixin-border-glow($brand-danger, 0.5);
}

.cl-invalid-input-glow:focus {
  @include my-mixin-border-glow($brand-danger, 1)
}

.cl-warning-input-glow:focus {
  @include my-mixin-border-glow($brand-warning,  1)
}

.cl-valid-input-glow:focus {
  @include my-mixin-border-glow($brand-success,  1)
}

.cl-primary-color-glow {
   @include my-mixin-border-glow($brand-primary,  1)
}


.cl-pulse {
  -webkit-animation-name: pulse;
  animation-name: pulse;
  animation-duration: $pulse-animation-duration;
  animation-iteration-count: infinite;

}

.cl-feedback-on-input-validity-div {
  min-height: 20px;
}

.cl-text-shadow {
    text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5);
}

.cl-text-danger {
  color: $brand-danger;
}

.panel-waiting {
  @include panel-variant($panel-waiting-border, $panel-waiting-text, $panel-waiting-heading-bg, $panel-waiting-border);
}


.cl-text-size-1_5em {
  font-size: 1.5em;
}

.cl-text-size-2_0em {
  font-size: 2em;
}

.cl-main-ng-view-area-relative-wrapper {
  position: relative;
  // Note $line-height-computed in the following calculation is the margin
  // at the bottom that is used in the bootstrap css panel definition.
  height: nth($common-display-area-height-list, 1) + $vertical-spacing-between-major-sections;
  @for $idx from 1 through length($viewport-heights-list) {
    @media (min-height: nth($viewport-heights-list, $idx)) {
      height: nth($common-display-area-height-list, $idx) + $vertical-spacing-between-major-sections;
    }
  }
}

.cl-ng-view {
  position: absolute;
  width: 100%;
}

.cl-fade-in-main-view {
  &.ng-enter {
    animation: fadeIn $slide-main-menu-duration;
  }
}
.cl-fade-in-chatbox-view {
  &.ng-hide-add, &.ng-hide-remove {
    /* this is needed to override the "display: none !important" from ng-hide */
    display: block !important;
  }
  &.ng-hide {
    opacity: 0;
  }
  /**
   * we fade-in upon removing the ng-hide class
   */
  &.ng-hide-remove {
    animation: $slide-main-menu-duration fadeIn;
    -webkit-animation: $slide-main-menu-duration fadeIn;
  }
}

.cl-hide-row-overflow {
  overflow: hidden;
}


hr.cl-hr-in-chat-panel {
  border-top: 1px solid $gray-light-more;
  margin-top: 10px;
  margin-bottom: 10px;
}


div.cl-center-overlay-outer-div {
  position: absolute;
  left: 50%;
  text-align: center;
}

div.cl-center-overlay-outer-div-bottom {
  bottom: 15px;
}

div.cl-center-overlay-outer-div-top {
  top: 5px;
}

div.cl-center-overlay-middle-div {
  position: relative;
  left: -50%;
}


span.cl-overlay-text-span a:hover {
  text-decoration: none;
  color:  $lighten-link-color;
}

.cl-full-height {
  height: 100%;
}