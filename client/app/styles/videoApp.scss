$icon-font-path: "../bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/";
// bower:scss
@import "../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss";
// endbower

.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}


a:link { color: #FFFFFF; }
a:visited {color: #FFFFFF; }
html, body {
  background-color: #FFFFFF;
  height: 100%;
  font-family: Verdana, Arial, Helvetica, sans-serif;
}
body {
  margin: 0;
  padding: 0;
}


#card-elem {
  -webkit-transition-duration: 2s;
  -webkit-transform-style: preserve-3d;
}
.cl-local-video-wrapper-div {
  //position: absolute;
  //transform: scale(-1, 1);
  //-webkit-transform: scale(-1, 1);
  //-webkit-backface-visibility: hidden;
}
#id-remote-video-wrapper-div {
  //position: absolute;
  //-webkit-transform: rotateY(180deg);
  //-webkit-backface-visibility: hidden;
  @media (max-width: $screen-xs-max) {
    // initially is hidden on xs devices until we receive a remote stream, at which point the local-wrapper-div will
    // be hidden and this div displayed.
    display: none;
  }
}


/* for xs devices, we scale the video in steps based on the following widths. */
$viewport-320: 320px;
$viewport-360: 360px;
$viewport-400: 400px;
$viewport-480: 480px;
$viewport-600: 600px;

/*
For small devices, the video window width will be computed as
width = viewport_width - 2px (1px border left and right on cl-my-well)
*/
$video-width-320: $viewport-320 - 2px;
$video-width-360: $viewport-360 - 2px;
$video-width-400: $viewport-400 - 2px;
$video-width-480: $viewport-480 - 2px;
$video-width-600: $viewport-600 - 2px;


$sm-vid-width: 333px;
$md-vid-width: 443px;
$lg-vid-width : 553px;

$mini-video-width-percentage : 30%;

$video-aspect-ratio : 3/4;
$characters-per-row : 80;

.cl-video-sizing {
  /* Extra small (xs) devices (ie. phones, less than 768px) */

  // anything smaller than 320 will get the 320 width
  width: $video-width-320;
  height: $video-width-320 * $video-aspect-ratio;

  @media (min-width: $viewport-360) {
    width: $video-width-360;
    height: $video-width-360 * $video-aspect-ratio;
  }
  @media (min-width: $viewport-400) {
    width: $video-width-400;
    height: $video-width-400 * $video-aspect-ratio;
  }
  @media (min-width: $viewport-480) {
    width: $video-width-480;
    height: $video-width-480 * $video-aspect-ratio;
  }
  @media (min-width: $viewport-600) {
    width: $video-width-600;
    height: $video-width-600 * $video-aspect-ratio;
  }

  /* Small devices (tablets, 768px and up) */
  @media (min-width: $screen-sm-min) {
    width: $sm-vid-width;
    height: $sm-vid-width * $video-aspect-ratio;
  }

  /* Medium devices (desktops, 992px and up) */
  @media (min-width: $screen-md-min) {
    width: $md-vid-width;
    height: $md-vid-width * $video-aspect-ratio;
  }

  /* Large devices (large desktops, 1200px and up) */
  @media (min-width: $screen-lg-min) {
    width: $lg-vid-width;
    height: $lg-vid-width * $video-aspect-ratio;
  }
}


video {
  opacity: 1;
  -webkit-transition-property: opacity;
  -webkit-transition-duration: 1s;
  display: block; // remove 5 px gap at bottom
}



.cl-mini-video-div {
  position: absolute;
  height: $mini-video-width-percentage;
  width: $mini-video-width-percentage;
  top: 0px;
  left: 0px;
  opacity: 1.0;

  @media (min-width: $screen-sm-min) {
    // this mini-video is only intended for xs screens - hide for anything larger
    display: none;
  }
}

.cl-mini-video-element {
  width: 100%;
  height: 100%;
  opacity: 0;
  -webkit-transition-property: opacity;
  -webkit-transition-duration: 1s;
}

.cl-ascii-container {
  padding: 0;
  display: table-cell;
  vertical-align: middle;
  text-align: center;
  border: none;
  border-radius: 0px;
}

.cl-mini-ascii-container-sizing {

  width: ($mini-video-width-percentage / 100%) * $video-width-320;
  height: ($mini-video-width-percentage / 100%) * $video-width-320 * $video-aspect-ratio;

  @media (min-width: $viewport-360) {
    width: ($mini-video-width-percentage / 100%) * $video-width-360;
    height: ($mini-video-width-percentage / 100%) * $video-width-360 * $video-aspect-ratio;
  }
  @media (min-width: $viewport-400) {
    width: ($mini-video-width-percentage / 100%) * $video-width-400;
    height: ($mini-video-width-percentage / 100%) * $video-width-400 * $video-aspect-ratio;
  }
  @media (min-width: $viewport-480) {
    width: ($mini-video-width-percentage / 100%) * $video-width-480;
    height: ($mini-video-width-percentage / 100%) * $video-width-480 * $video-aspect-ratio;
  }
  @media (min-width: $viewport-600) {
    width: ($mini-video-width-percentage / 100%) * $video-width-600;
    height: ($mini-video-width-percentage / 100%) * $video-width-600 * $video-aspect-ratio;
  }
}


.cl-ascii-drawing-text {
  font-family: 'Courier New', 'Courier', monospace;
  display: inline-block;
}

.cl-ascii-normal-span {

  font-size: $video-width-320 / $characters-per-row;
  line-height: $video-width-320 / $characters-per-row;
  letter-spacing: -0.1em;

  @media (min-width: $video-width-360) {
    font-size: $video-width-360 / $characters-per-row;
    line-height: $video-width-360 / $characters-per-row;
  }
  @media (min-width: $video-width-400) {
    font-size: $video-width-400 / $characters-per-row;
    line-height: $video-width-400 / $characters-per-row;
  }
  @media (min-width: $video-width-480) {
    font-size: $video-width-480 / $characters-per-row;
    line-height: $video-width-480 / $characters-per-row;
  }
  @media (min-width: $video-width-600) {
    font-size: $video-width-600 / $characters-per-row;
    line-height: $video-width-600 / $characters-per-row;
  }

  @media (min-width: $screen-sm-min) {
    font-size: $sm-vid-width / $characters-per-row;
    line-height: $sm-vid-width / $characters-per-row;
  }

  @media (min-width: $screen-md-min) {
    font-size: $md-vid-width / $characters-per-row;
    line-height: $md-vid-width / $characters-per-row;
  }

  @media (min-width: $screen-lg-min) {
    font-size: $lg-vid-width / $characters-per-row;
    line-height: $lg-vid-width / $characters-per-row;
  }
}


.cl-ascii-mini-span {
  // This is applied when the ascii text is being shown in the "mini-video" window
  font-size: ($mini-video-width-percentage / 100%) * ($video-width-320 / $characters-per-row);
  line-height:($mini-video-width-percentage / 100%) * ($video-width-320 / $characters-per-row);
  letter-spacing: -0.1em;

  @media (min-width: $viewport-360) {
    font-size: ($mini-video-width-percentage / 100%) * ($video-width-360 / $characters-per-row);
    line-height: ($mini-video-width-percentage / 100%) * ($video-width-360 / $characters-per-row);
  }
  @media (min-width: $viewport-400) {
    font-size: ($mini-video-width-percentage / 100%) * ($video-width-400 / $characters-per-row);
    line-height: ($mini-video-width-percentage / 100%) * ($video-width-400 / $characters-per-row);
  }
  @media (min-width: $viewport-480) {
    font-size: ($mini-video-width-percentage / 100%) * ($video-width-480 / $characters-per-row);
    line-height: ($mini-video-width-percentage / 100%) * ($video-width-480 / $characters-per-row);
  }
  @media (min-width: $viewport-600) {
    font-size: ($mini-video-width-percentage / 100%) * ($video-width-600 / $characters-per-row);
    line-height: ($mini-video-width-percentage / 100%) * ($video-width-600 / $characters-per-row);
  }
}

#id-info-div {
  position: fixed;
  width: 400px;
  margin-left: -200px;
  left: 50%;
  top: 25%;
  display: none;
  z-index: 10;
  background: #FFFFFF;
}

.cl-my-well {
  margin-bottom: 10px;
  background-color: #f5f5f5;
  border: 1px solid #e3e3d3;
}

.cl-mini-well {
  background-color: #f5f5f5;
  border: 2px solid #e3e3d3;
}

.cl-hide-on-larger-than-xs {
  @media (min-width: $screen-sm-min) {
    display: none;
  }
}

#id-dummy-xs-div {
  // This is used by the javascript to determined the max width for xs screens.
  display: none;
  width: $screen-xs-max;
}

.cl-navbar-absolute-bottom {
  position: absolute;
  bottom: 0;
  opacity: 0.7;
}

.cl-show-hide-fade {
  -webkit-transition:all linear 0.5s;
  -moz-transition: linear all 0.5s;
  transition:all linear 0.5s;
}

.cl-show-hide-fade.ng-hide {
  opacity:0;
}

.cl-show-hide-fade.ng-hide-add, .cl-show-hide-fade.ng-hide-remove {
  display: block!important;
}

$arrow-color: #E75045;
$arrow-triangle-width : 70px;
$arrow-triangle-height : 70px;
$arrow-stem-width : 20px;
$arrow-stem-height : 50px;

.cl-arrow-wrapper-osx-chrome {
  position: fixed;
  top: 3px;
  right : 15px;
  z-index: 50;
}

.cl-arrow-transition {
  -webkit-transition:all linear 3s;
  -moz-transition: linear all 3s;
  transition:all linear 3s;
}

.cl-arrow {
  position: relative;
  width: $arrow-triangle-width;
  opacity: 0
}

.cl-arrow.cl-show-arrow {
  @extend .cl-arrow-transition;
}

.cl-arrow.cl-show-arrow {
  opacity: 1;
}

.cl-arrow i {
  // draw the triangle part of the arrow
  position: absolute;
  width: 0;
  height: 0;
  border-left: $arrow-triangle-width / 2 solid transparent;
  border-right: $arrow-triangle-width / 2 solid transparent;
  border-bottom: $arrow-triangle-height solid $arrow-color;
}
.cl-arrow i+i {
  // draw the arrow stem
  position: absolute;
  top: $arrow-triangle-height - 1px;
  left: $arrow-triangle-width / 2 - $arrow-stem-width / 2;
  width: $arrow-stem-width;
  height: $arrow-stem-height * 8;
  background: $arrow-color;
  border: 0px;
}

.cl-arrow.cl-show-arrow i+i {
  // only show the animation when we are adding the .cl-show-arrow class, not when it is removed
  @extend .cl-arrow-transition;
}

.cl-arrow.cl-show-arrow i+i {
  // at the end of the animation, the arrow stem is shorter than at the beginning.
  height : $arrow-stem-height;
}
