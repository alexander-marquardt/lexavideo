$chat-panel-heading-height: 50px;
$chat-groups-members-margin: 15px;

$short-chat-panel-height: 200px;
$tall-chat-panel-height: 400px;

// $estimated-bubble-height is used for computing the offset required in the first div to push the first
// message to the bottom of the chat panel.
$estimated-bubble-height: 30px;

$chat-bubble-zindex: 10;
$chat-group-members-zindex: 20;
$group-members-panel-header-height: 30px;

.cl-chat-row {
  color: #777777;
}

// This div is used to push the chat down to the bottom of the chat panel when there are just a few
// chat messages sent. This makes it more likely that if the user is looking at the video that they
// will see the new message.
.cl-dummy-blank-div-in-short-chat-panel {
  height: $short-chat-panel-height - $estimated-bubble-height;
}

.cl-dummy-blank-div-in-tall-chat-panel {
  height: $tall-chat-panel-height - $estimated-bubble-height;
}

.cl-chat-panel {
  position: relative; // needed so that we can absolute position the chat members box
}

.cl-chat-panel-heading {
  height: $chat-panel-heading-height;
}

.cl-chat-panel-body
{
  padding: 0px 15px 0px 15px;
  overflow-y: scroll;
}

.cl-chat-panel-body-short {
  height: $short-chat-panel-height;
}

.cl-chat-panel-body-tall {
  height: $tall-chat-panel-height;
}

.cl-chat-group-members-panel {
  position: absolute;
  top: $chat-panel-heading-height + $chat-groups-members-margin;
  right: $chat-groups-members-margin;
  max-width: $screen-xs-max/2;
  z-index: $chat-group-members-zindex;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
}

.cl-chat-group-members-panel-header {
  height: $group-members-panel-header-height;
  padding: 5px;
}
.cl-chat-group-members-panel-body
{
  text-align: left;
  padding: 0px 5px 0px 5px;
  overflow-y: scroll;
}

.cl-chat-group-video-button-modifier {
  padding-left: 2.5px;
  padding-right: 2.5px;
  padding-top: 1px;
  padding-bottom: 0px;
}

.cl-chat-group-spacing-between-group-members {
  margin-top: 2px;
  margin-bottom: 2px;
}

.cl-chat-group-video-icon-container {
  display:inline-block;
  vertical-align: middle;
  width: 20px;
}

.cl-chat-panel-body-short .cl-chat-group-members-panel-body {
  max-height: $short-chat-panel-height / 2 - $group-members-panel-header-height;
}

.cl-chat-panel-body-tall .cl-chat-group-members-panel-body{
  max-height: $tall-chat-panel-height / 2 - $group-members-panel-header-height;
}


.bubble {
  display: block;
  position: relative;
  padding: 0px 5px 0px 5px;
  margin-top: 2px;
  margin-bottom: 2px;
  border: $gray-light solid 1px;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  z-index: $chat-bubble-zindex;
}

.bubble.bubble-left {
  float: left;
  text-align: left;
  background: $gray-lighter;
}

.bubble.bubble-right {
  float: right;
  text-align: left;
  background: $brand-primary-lighter;
}

.bubble.bubble-error {
    border: $brand-danger solid 1px;
    background: $brand-danger-lighter;
}

/* The bubble arrows are made by overlaying two triangles on top of each other. The first is a dark color, and the
   second is a light color. The part of the dark triangle that is visible is the "border" of the triangle, and the
   part of the triangle that is light is the "content" of the chat bubble.

   The bubble arrow is attached to an <i> element that must be placed inside the bubble div.
   eg: <div class="bubble bubble-right"><i></i>text goes here</div>  -- the selection of <i> is arbitrary and
   can be changed to another tag if necessary by modifying the css and html. */

// the dark part of the "arrow"
%bubble-arrow-common {
  vertical-align: top;
  position: absolute;
  display: block;
  top: 6px;
  border-style: solid;
}

// the dark part of the "arrow" on the left side of the bubble
.bubble.bubble-left>i {
  left: -10px;
  border-width: 5px 10px 5px 0;
  border-color: transparent $gray-light transparent transparent;
  z-index: $chat-bubble-zindex + 1;
  @extend %bubble-arrow-common;
}

// the dark part of the right arrow on the right side of the chat bubble
.bubble.bubble-right>i {
  left: 100%;
  border-width: 5px 0px 5px 10px;
  border-color: transparent transparent transparent $gray-light;
  z-index: $chat-bubble-zindex + 1;
  @extend %bubble-arrow-common;
}


.bubble.bubble-error>i {
  border-color: transparent $brand-danger transparent transparent;
}


// the light part of the "arrow"
%arrow-overlay-common {
  content: "";
  position: absolute;
  top: -5px;
  border-style: solid;
  display: block;
  width: 0;
}

// the light part of the "arrow" on the left side of the bubble
// :after is treated as the last child of .bubble-left-arrow
.bubble.bubble-left>i:after {
  left: 2px;
  border-width: 5px 10px 5px 0;
  border-color: transparent $gray-lighter transparent transparent;
  z-index: $chat-bubble-zindex + 2;
  @extend %arrow-overlay-common;
}

// the light part of the right arrow on the right side of the chat bubble
// :after is treated as the last child of .bubble-right-arrow
.bubble.bubble-right>i:after {
  left: -12px;
  border-width: 5px 0px 5px 10px;
  border-color: transparent  transparent transparent $brand-primary-lighter;
  z-index: $chat-bubble-zindex + 2;
  @extend %arrow-overlay-common;
}

.bubble.bubble-left.bubble-error>i:after {
  border-color: transparent $brand-danger-lighter transparent transparent;
}

.cl-chat-time-display {
  color: $gray-light;
  font-size: 75%;
  vertical-align: sub;
}


.cl-fade-in-chat-bubble-element {
  opacity:0.5;
  -webkit-transition: opacity 0.6s ease-out;
  -moz-transition: opacity 0.6s ease-out;
  -ms-transition: opacity 0.6s ease-out;
  -o-transition: opacity 0.6s ease-out;
  transition: opacity 0.6s ease-out;
}

.cl-fade-in-chat-bubble-element.cl-show-new-chat-bubble-element {
  opacity: 1;
}

.cl-flash-chat-heading {
  opacity:0.5;
}


.cl-chatbox-glow {
   @include my-mixin-border-glow($brand-primary,  1, 5)
}




.cl-prompt-for-video-access {
     margin-top: 20px;
     padding-top: 3px;
     padding-bottom: 3px;
     @include my-mixin-border-glow($brand-primary,  1, 2)
}